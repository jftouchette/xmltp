#
# xmltp_tags.py		Constants for XML-TP tags
# -------------
#
# $Source: /ext_hd/cvs/gx/xmltp_tags.py,v $
# $Header: /ext_hd/cvs/gx/xmltp_tags.py,v 1.2 2004/06/08 14:25:54 sawanai Exp $
#
#  Copyright (c) 2001-2003 Jean-Francois Touchette
#
#  This library is free software; you can redistribute it and/or
#  modify it under the terms of the GNU Library General Public
#  License as published by the Free Software Foundation; either
#  version 2 of the License, or (at your option) any later version.
#
#  This library is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  Library General Public License for more details.
#
#  You should have received a copy of the GNU Library General Public
#  License along with this library; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#  (The file "COPYING" or "LICENSE" in a directory above this source file
#  should contain a copy of the GNU Library General Public License text).
#  -------------------------------------------------------------------------
#
#
# NOTES:
# (1) Only the begin tag <xxx> is defined, the end tag </xxx> can be built
#     by putting the '/' in front of the begin tag
# (2) The brackets '<' and '>' are not part of the constants. The xmltp_writer.py
#     module adds them around each tag constant.
# (3) XMLTP_TAG_XMLVERSION_AND_ENCODING and XMLTP_TAG_EOT do not have an end tag.
#
# ------------------------------------------------------------------------------
# 2001nov20,jft: first version, based on xmltp_tags.h of 2001sept13
# 2001nov25,jft: added getValueTagForType(jType)
#		 added JavaSQL constants
# 2001nov28,jft: added special tag XMLTP_TAG_RESET
# 2002feb09,jft: added XMLTP_TAG_TOTALROWS, XMLTP_TAG_NBROWS
# 2002may13,jft: added XMLTP_TAG_SZ
# 2002aug20,jft: added META_CHAR_AMP, META_CHAR_LT, META_CHAR_GT
# 2003aug19,jft: added META_CHAR_APOS, META_CHAR_QUOT
#

# meta-characters:
META_CHAR_AMP	= "&amp;"
META_CHAR_LT	= "&lt;"
META_CHAR_GT	= "&gt;"
META_CHAR_APOS	= "&apos;" 
META_CHAR_QUOT	= "&quot;"

XMLTP_TAG_XMLVERSION_AND_ENCODING = "?xml version=\"1.0\" encoding=\"ISO-8859-1\" ?"

XMLTP_TAG_EOT		= "EOT/"

XMLTP_TAG_RESET		= "RESET/"	# tell client's parser to reset its 
					# internal states and start parsing again.


XMLTP_TAG_ATTR		= "attr"
XMLTP_TAG_COL		= "col"
XMLTP_TAG_COLNAMES	= "colnames"
XMLTP_TAG_DATE		= "date"
XMLTP_TAG_INT		= "int"
XMLTP_TAG_ISNULL	= "isnull"
XMLTP_TAG_MSG		= "msg"
XMLTP_TAG_MSGLIST	= "msglist"
XMLTP_TAG_NAME		= "name"
XMLTP_TAG_NUM		= "num"
XMLTP_TAG_OUTPARAMS	= "outparams"
XMLTP_TAG_PARAM		= "param"
XMLTP_TAG_PROC		= "proc"
XMLTP_TAG_PROCCALL	= "proccall"
XMLTP_TAG_RESPONSE	= "response"
XMLTP_TAG_RESULTSET	= "resultset"
XMLTP_TAG_RESULTSETSLIST = "resultsetslist"
XMLTP_TAG_RETURNSTATUS	= "returnstatus"
XMLTP_TAG_ROW		= "row"
XMLTP_TAG_ROWS		= "rows"
XMLTP_TAG_STR		= "str"
XMLTP_TAG_SZ		= "sz"

XMLTP_TAG_NBROWS	= "nbrows"
XMLTP_TAG_TOTALROWS	= "totalrows"


# Copied from JavaSQLTypes.h -- 2001nov25
# (JavaSQLTypes.h was generated by JavaSQLTypes.java from 
#  java.sql.Types 2001aug30)
#
JAVA_SQL_BIGINT		= -5
JAVA_SQL_BINARY		= -2
JAVA_SQL_BIT		= -7
JAVA_SQL_CHAR		= 1
JAVA_SQL_DATE		= 91
JAVA_SQL_DECIMAL	= 3
JAVA_SQL_DOUBLE		= 8
JAVA_SQL_FLOAT		= 6
JAVA_SQL_INTEGER	= 4
JAVA_SQL_LONGVARBINARY	= -4
JAVA_SQL_LONGVARCHAR	= -1
JAVA_SQL_NULL		= 0
JAVA_SQL_NUMERIC	= 2
JAVA_SQL_OTHER		= 1111
JAVA_SQL_REAL		= 7
JAVA_SQL_SMALLINT	= 5
JAVA_SQL_TIME		= 92
JAVA_SQL_TIMESTAMP	= 93
JAVA_SQL_TINYINT	= -6
JAVA_SQL_VARBINARY	= -3
JAVA_SQL_VARCHAR	= 12


dictTypeToValueTag = {
	JAVA_SQL_DATE		:  XMLTP_TAG_DATE,
	JAVA_SQL_TIME		:  XMLTP_TAG_DATE,
	JAVA_SQL_TIMESTAMP	:  XMLTP_TAG_DATE,
	JAVA_SQL_TINYINT	:  XMLTP_TAG_INT,
	JAVA_SQL_SMALLINT	:  XMLTP_TAG_INT,
	JAVA_SQL_BIGINT		:  XMLTP_TAG_INT,
	JAVA_SQL_BIT		:  XMLTP_TAG_INT,
	JAVA_SQL_INTEGER	:  XMLTP_TAG_INT,
	JAVA_SQL_NUMERIC	:  XMLTP_TAG_NUM,
	JAVA_SQL_REAL		:  XMLTP_TAG_NUM,
	JAVA_SQL_DECIMAL	:  XMLTP_TAG_NUM,
	JAVA_SQL_DOUBLE		:  XMLTP_TAG_NUM,
	JAVA_SQL_FLOAT		:  XMLTP_TAG_NUM,
	JAVA_SQL_CHAR		:  XMLTP_TAG_STR,
	JAVA_SQL_VARCHAR	:  XMLTP_TAG_STR,
	JAVA_SQL_LONGVARCHAR	:  XMLTP_TAG_STR,
	JAVA_SQL_BINARY		:  XMLTP_TAG_STR,
	JAVA_SQL_VARBINARY	:  XMLTP_TAG_STR,
	JAVA_SQL_LONGVARBINARY	:  XMLTP_TAG_STR,
	JAVA_SQL_OTHER		:  XMLTP_TAG_STR,
	JAVA_SQL_NULL		:  XMLTP_TAG_STR,
 }

def getValueTagForType(jType):
	try:
		return (dictTypeToValueTag[jType])
	except KeyError:
		return XMLTP_TAG_STR


if __name__ == '__main__':
	ls_tags = [ 
		XMLTP_TAG_XMLVERSION_AND_ENCODING,
		XMLTP_TAG_EOT,
		XMLTP_TAG_ATTR,
		XMLTP_TAG_COL,
		XMLTP_TAG_COLNAMES,
		XMLTP_TAG_DATE,
		XMLTP_TAG_INT,
		XMLTP_TAG_ISNULL,
		XMLTP_TAG_MSG,
		XMLTP_TAG_MSGLIST,
		XMLTP_TAG_NAME,
		XMLTP_TAG_NUM,
		XMLTP_TAG_OUTPARAMS,
		XMLTP_TAG_PARAM,
		XMLTP_TAG_PROC,
		XMLTP_TAG_PROCCALL,
		XMLTP_TAG_RESPONSE,
		XMLTP_TAG_RESULTSET,
		XMLTP_TAG_RESULTSETSLIST,
		XMLTP_TAG_RETURNSTATUS,
		XMLTP_TAG_ROW,
		XMLTP_TAG_ROWS,
		XMLTP_TAG_STR,
		]
	for tag in ls_tags:
		print "<" + tag + ">"

	for k in dictTypeToValueTag.keys():
		print k, getValueTagForType(k)
	print  "toto", getValueTagForType("toto")
#
# End of  xmltp_tags.py
#
 
